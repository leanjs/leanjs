"use strict";(self.webpackChunk_leanjs_website=self.webpackChunk_leanjs_website||[]).push([[787],{5318:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9083:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var r=n(5773),a=(n(7378),n(5318));const o={},i="@leanjs/vue",p={unversionedId:"vue/README",id:"vue/README",title:"@leanjs/vue",description:"yarn add @leanjs/vue @leanjs/core",source:"@site/../packages/vue/README.md",sourceDirName:"vue",slug:"/vue/",permalink:"/packages/vue/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"@leanjs/next",permalink:"/packages/next/"},next:{title:"@leanjs/vue-router",permalink:"/packages/vue-router/"}},s={},u=[{value:"Composables",id:"composables",level:2},{value:"<code>useSharedState</code>",id:"usesharedstate",level:3}],l={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"leanjsvue"},"@leanjs/vue"),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"yarn add @leanjs/vue @leanjs/core")),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("p",null,"1 . Create your custom ",(0,a.kt)("inlineCode",{parentName:"p"},"useSharedState")," composable. This will add type-safety to your ",(0,a.kt)("inlineCode",{parentName:"p"},"useSharedState")," composable based on your instance of Lean ",(0,a.kt)("inlineCode",{parentName:"p"},"runtime"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'// runtime-vue.ts\n// Pro-tip: move this file to its own package, see examples/coolest-todos/packages/runtime-vue\n\nconst defaultState = {\n  locale: "en", // define your default state accordingly, this is just an example\n};\n\n// configureRuntime is a generic TS function (if you use TypeScript)\n// handy if the types that you want don\'t match the inferred types from defaultState\nexport const { createRuntime } = configureRuntime(defaultState)({\n  onError: () => throw new Error("\ud83d\udd25 log this properly!")\n});\n\nexport const { useSharedState } = createRuntimeBindings(createRuntime);\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u26a0\ufe0f Why is ",(0,a.kt)("inlineCode",{parentName:"strong"},"useSharedState")," not a generic function instead of using ",(0,a.kt)("inlineCode",{parentName:"strong"},"createRuntimeBindings")," to infer and return a typed ",(0,a.kt)("inlineCode",{parentName:"strong"},"useSharedState"),"?")),(0,a.kt)("p",null,"We want ",(0,a.kt)("inlineCode",{parentName:"p"},"useSharedState")," to have custom TypeScript types based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"runtime")," used by a group of micro-apps in the same micro-frontend architecture. We don't want to give the consumers of ",(0,a.kt)("inlineCode",{parentName:"p"},"useSharedState")," the ability to change these types because that could create inconsistencies between different micro-apps that share the same ",(0,a.kt)("inlineCode",{parentName:"p"},"runtime"),"."),(0,a.kt)("p",null,"2 . Provide a ",(0,a.kt)("inlineCode",{parentName:"p"},"runtime")," at the root of your app, e.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { createApp } from "vue";\n// Pro-tip: move your ./runtime-vue file to its own package, see examples/coolest-todos/packages/runtime-vue\nimport { createRuntime } from "./runtime-vue";\n\nconst runtime = createRuntime();\nconst app = createApp(App);\n\napp.provide("runtime", runtime);\napp.mount(document.getElementById("#app"));\n')),(0,a.kt)("p",null,"3 . Use your ",(0,a.kt)("inlineCode",{parentName:"p"},"useSharedState")," in your app, e.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <h1>Locale is {{ locale }}</h1>\n</template>\n<script>\n  import { useSharedState } from "./runtime-vue";\n  export default {\n    name: "App",\n    setup() {\n      return useSharedState("locale");\n    },\n  };\n<\/script>\n')),(0,a.kt)("h2",{id:"composables"},"Composables"),(0,a.kt)("p",null,"To use any of the following composables, you must first call ",(0,a.kt)("inlineCode",{parentName:"p"},"createRuntimeBindings"),". Read the ",(0,a.kt)("a",{parentName:"p",href:"#usage"},"usage")," section above for more info."),(0,a.kt)("h3",{id:"usesharedstate"},(0,a.kt)("inlineCode",{parentName:"h3"},"useSharedState")),(0,a.kt)("p",null,"Composable to get the current state of one or many shared state properties. Types:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type useSharedState = <\n  MyState extends Record<string, any>,\n  Prop extends keyof MyState\n>(\n  ...props:\n    | Prop[]\n    | {\n        prop: Prop;\n        loader?: () => MyState[Prop] | Promise<MyState[Prop]>;\n        deep?: boolean;\n      }\n) => Record<Prop, Ref<MyState[Prop]>>;\n")))}c.isMDXComponent=!0}}]);