"use strict";(self.webpackChunk_leanjs_website=self.webpackChunk_leanjs_website||[]).push([[787],{5318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,k=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(k,p(p({ref:t},u),{},{components:n})):a.createElement(k,p({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,p=new Array(o);p[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var s=2;s<o;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9083:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(5773),r=(n(7378),n(5318));const o={},p="@leanjs/vue",i={unversionedId:"vue/README",id:"vue/README",title:"@leanjs/vue",description:"Installation",source:"@site/../packages/vue/README.md",sourceDirName:"vue",slug:"/vue/",permalink:"/packages/vue/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"@leanjs/next",permalink:"/packages/next/"},next:{title:"@leanjs/vue-router",permalink:"/packages/vue-router/"}},l={},s=[{value:"Installation",id:"installation",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"<code>createRuntimeBindings</code>",id:"createruntimebindings",level:3},{value:"<code>useSharedState</code>",id:"usesharedstate",level:3},{value:"ComposableApps",id:"composableapps",level:2},{value:"<code>createApp</code>",id:"createapp",level:3},{value:"Components",id:"components",level:2},{value:"<code>HostProvider</code>",id:"hostprovider",level:3},{value:"<code>runtime</code> prop - required",id:"runtime-prop---required",level:4},{value:"<code>origin</code> prop - optional",id:"origin-prop---optional",level:4},{value:"<code>Host</code>",id:"host",level:3}],u={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"leanjsvue"},"@leanjs/vue"),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"If your Vue app is in a monorepo (recommended) execute the following command at the root of your repository:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add -W @leanjs/vue @leanjs/core @leanjs/vue-router\n")),(0,r.kt)("p",null,"then in the ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," of your Vue app add the following ",(0,r.kt)("inlineCode",{parentName:"p"},"peerDependencies"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"peerDependencies": {\n  "@leanjs/core": "*",\n  "@leanjs/vue": "*",\n  @leanjs/vue-router: "*"\n}\n')),(0,r.kt)("p",null,"If your Vue app is not in a monorepo, then run the following command instead of the above:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @leanjs/vue @leanjs/core @leanjs/vue-router\n")),(0,r.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,r.kt)("h3",{id:"createruntimebindings"},(0,r.kt)("inlineCode",{parentName:"h3"},"createRuntimeBindings")),(0,r.kt)("p",null,"1 . First, you have to create your Vue bindings for your ",(0,r.kt)("a",{parentName:"p",href:"/packages/core/#the-leanjs-runtime"},(0,r.kt)("inlineCode",{parentName:"a"},"runtime")),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// shared-runtime.ts\n\n// You need to configure your runtime\nconst defaultState = { locale: "en" }; // this is just an example\nexport const { createRuntime } = configureRuntime(defaultState)({\n  onError: () => {},\n});\n\n// Then create your Vue bindings for your runtime\nexport const { useSharedState, HostProvider } =\n  createRuntimeBindings(createRuntime);\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Read ",(0,r.kt)("a",{parentName:"p",href:"/packages/core/#basic-usage"},"@leanjs/core")," if you have not already created your own ",(0,r.kt)("inlineCode",{parentName:"p"},"createRuntime")," function")),(0,r.kt)("p",null,"2 . Add a ",(0,r.kt)("inlineCode",{parentName:"p"},"HostProvider")," to the root of your app tree"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'<template>\n  <div>\n    <h1>Nuxt Host</h1>\n    <HostProvider :runtime="runtime" origin="http://localhost:56500">\n      <NuxtPage />\n    </HostProvider>\n  </div>\n</template>\n\n<script setup lang="ts">\n  import { createRuntime, HostProvider } from "./runtime-vue";\n\n  const runtime = createRuntime({ context: { appName: "VueShell" } });\n<\/script>\n')),(0,r.kt)("p",null,"3 . Use your ",(0,r.kt)("inlineCode",{parentName:"p"},"useSharedState")," in your app, e.g."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <h1>Locale is {{ locale }}</h1>\n</template>\n<script>\n  import { useSharedState } from "./runtime-vue";\n  export default {\n    name: "App",\n    setup() {\n      return useSharedState("locale");\n    },\n  };\n<\/script>\n')),(0,r.kt)("h3",{id:"usesharedstate"},(0,r.kt)("inlineCode",{parentName:"h3"},"useSharedState")),(0,r.kt)("p",null,"Composable to get the current state of one or many shared state properties. Types:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type useSharedState = <\n  MyState extends Record<string, any>,\n  Prop extends keyof MyState\n>(\n  ...props:\n    | Prop[]\n    | {\n        prop: Prop;\n        loader?: () => MyState[Prop] | Promise<MyState[Prop]>;\n        deep?: boolean;\n      }\n) => Record<Prop, Ref<MyState[Prop]>>;\n")),(0,r.kt)("h2",{id:"composableapps"},"ComposableApps"),(0,r.kt)("p",null,"To use any of the following composables, you must first call ",(0,r.kt)("inlineCode",{parentName:"p"},"createRuntimeBindings"),". Read the ",(0,r.kt)("a",{parentName:"p",href:"#basic-usage"},"basic usage")," section above for more info."),(0,r.kt)("h3",{id:"createapp"},(0,r.kt)("inlineCode",{parentName:"h3"},"createApp")),(0,r.kt)("p",null,"Arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"App: Component")," - required"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options: { appName: string }")," - required.")),(0,r.kt)("p",null,"Create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"index.ts|js")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src")," directory where your composable app is. For example:\nCreate a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"index.ts|js")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src")," directory where your composable app is. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"my-monorepo/\n\u251c- apps/\n\u2502  \u251c\u2500 vue-host/\n\u251c\u2500 composable-apps/\n\u2502  \u251c\u2500 vue-app-1/\n\u2502  \u2502  \u251c\u2500 package.json\n\u2502  \u2502  \u251c\u2500 src/\n\u2502  \u2502  \u2502  \u251c\u2500 VueApp1.vue\n\u2502  \u2502  \u2502  \u251c\u2500 index.ts \ud83d\udc48\n\u251c\u2500 package.json\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Read the recommended setup in our ",(0,r.kt)("a",{parentName:"p",href:"../../docs/getting-started/#recommended-setup"},"getting started page")," if you want to create a similar monorepo structure")),(0,r.kt)("p",null,"Call ",(0,r.kt)("inlineCode",{parentName:"p"},"createApp")," with the root component of your app, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// my-monorepo/composable-apps/vue-app-1/src/index.ts\nimport { createApp } from "@leanjs/vue-router";\n\nimport RemoteVue1 from "./RemoteVue1.vue";\n\nexport default createApp(RemoteVue1, { appName: "RemoteVue1" });\n')),(0,r.kt)("p",null,"Hello world example of the ",(0,r.kt)("inlineCode",{parentName:"p"},"RemoteVue1")," imported above"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"<template>\n  <div>\n    <h1>Hello Vue composable-app 1</h1>\n  </div>\n</template>\n")),(0,r.kt)("p",null,"Create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"selfHosted.ts|js")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src")," directory where your composable app is, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"my-monorepo/\n\u251c- apps/\n\u2502  \u251c\u2500 vue-host/\n\u251c\u2500 composable-apps/\n\u2502  \u251c\u2500 vue-app-1/\n\u2502  \u2502  \u251c\u2500 package.json\n\u2502  \u2502  \u251c\u2500 src/\n\u2502  \u2502  \u2502  \u251c\u2500 VueApp1.vue\n\u2502  \u2502  \u2502  \u251c\u2500 index.ts \ud83d\udc48\n\u2502  \u2502  \u2502  \u251c\u2500 selfHosted.ts \ud83d\udc48\n\u251c\u2500 package.json\n")),(0,r.kt)("p",null,"Export a ",(0,r.kt)("inlineCode",{parentName:"p"},"createRuntime")," function from the ",(0,r.kt)("inlineCode",{parentName:"p"},"selfHosted.ts|js")," file. This is the runtime that will be used when the app runs in isolation, meaning without a host."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// my-monorepo/composable-apps/vue-app-1/src/selfHosted.ts\nexport { createRuntime } from "@my-org/runtime-vue";\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Read ",(0,r.kt)("a",{parentName:"p",href:"/packages/core/#basic-usage"},"@leanjs/core")," if you have not already created your own ",(0,r.kt)("inlineCode",{parentName:"p"},"createRuntime")," function")),(0,r.kt)("h2",{id:"components"},"Components"),(0,r.kt)("h3",{id:"hostprovider"},(0,r.kt)("inlineCode",{parentName:"h3"},"HostProvider")),(0,r.kt)("p",null,"You have to ",(0,r.kt)("strong",{parentName:"p"},"call ",(0,r.kt)("a",{parentName:"strong",href:"#createruntimebindings"},"createRuntimeBindings")," to create a ",(0,r.kt)("inlineCode",{parentName:"strong"},"HostProvider")," component")," before you use it. ",(0,r.kt)("inlineCode",{parentName:"p"},"HostProvider")," stores in a Vue context values that are shared across apps hosted in the same component tree. Props:"),(0,r.kt)("h4",{id:"runtime-prop---required"},(0,r.kt)("inlineCode",{parentName:"h4"},"runtime")," prop - required"),(0,r.kt)("p",null,"Your Lean ",(0,r.kt)("a",{parentName:"p",href:"/packages/core/"},"runtime"),"."),(0,r.kt)("h4",{id:"origin-prop---optional"},(0,r.kt)("inlineCode",{parentName:"h4"},"origin")," prop - optional"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin"},"Origin")," where your remote composable apps are. During development, use the address where you run your Lean ",(0,r.kt)("a",{parentName:"p",href:"/packages/cli/#proxy-dev-server"},"proxy dev server"),". Use the address of your CDN in production, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"https://cdn.example.com"),"."),(0,r.kt)("p",null,"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'<template>\n    <HostProvider :runtime="runtime" :origin="origin">\n      <NuxtPage />\n    </HostProvider>\n</template>\n\n<script setup lang="ts">\n  import { createRuntime, HostProvider } from "./shared-runtime";\n\n  const runtime = createRuntime({\n    context: { appName: "AppExample" },\n  });\n\n  const origin = process.env.MICROFRONTENDS_ORIGIN;\n<\/script>\n')),(0,r.kt)("h3",{id:"host"},(0,r.kt)("inlineCode",{parentName:"h3"},"Host")),(0,r.kt)("p",null,"It hosts a composable app in a Vue host."),(0,r.kt)("p",null,"You can read more about this in ",(0,r.kt)("a",{parentName:"p",href:"/packages/nuxt/#host"},(0,r.kt)("inlineCode",{parentName:"a"},"@leanjs/nuxt"))))}m.isMDXComponent=!0}}]);